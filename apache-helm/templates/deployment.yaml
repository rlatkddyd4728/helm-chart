apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deploy
  labels:
    Tier: app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      Tier: app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        Tier: app
    spec:
      nodeSelector:
        eks.amazonaws.com/nodegroup: game
      tolerations:
      - key: role
        operator: Equal
        value: game
        effect: NoSchedule
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: eks.amazonaws.com/nodegroup
      #           operator: In
      #           values:
      #           - game
      containers:
      - name: apache
        image: "{{ .Values.image.repository }}:{{ .Values.image.test_tag | default .Chart.AppVersion }}"
        ports:
        - name: http
          containerPort: {{ .Values.containerPort }}
          protocol: TCP
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 60"]
        resources: 
{{ toYaml .Values.apache.resources | indent 12 }}
        volumeMounts:
        - mountPath: /test
          name: volume
        # startupProbe:
        #   httpGet:
        #     path: /healthz.php
        #     port: {{ .Values.containerPort }}
        #     initialDelaySeconds: 30
        #     timeoutSeconds: 5
        #     periodSeconds: 10
        #     failureThreshold: 30
        # livenessProbe:
        #   httpGet:
        #     path: /healthz.php
        #     port: {{ .Values.containerPort }}
        #     initialDelaySeconds: 30
        #     timeoutSeconds: 5
        #     periodSeconds: 10
        #     failureThreshold: 3
        # readinessProbe:
        #   httpGet:
        #     path: /healthz.php
        #     port: {{ .Values.containerPort }}
        #     initialDelaySeconds: 30
        #     timeoutSeconds: 5
        #     periodSeconds: 10
        #     failureThreshold: 3
      volumes:
      - name: volume
        hostPath:
          path: /test




