apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deploy-1
  labels:
    app: test-app-1
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: test-app-1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: test-app-1
    spec:
      nodeSelector:
        eks.amazonaws.com/nodegroup: mgmt
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: eks.amazonaws.com/nodegroup
      #           operator: In
      #           values:
      #           - mgmt
      containers:
        - name: apache
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 30"]
          resources: 
{{ toYaml .Values.apache.resources | indent 12 }}
          volumeMounts:
          - mountPath: /test
            name: test-volume
          startupProbe:
            httpGet:
              path: /healthz.php
              port: {{ .Values.containerPort }}
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
              failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /healthz.php
              port: {{ .Values.containerPort }}
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
              failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz.php
              port: {{ .Values.containerPort }}
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
              failureThreshold: 3
      volumes:
      - name: test-volume
        hostPath:
          path: /test




